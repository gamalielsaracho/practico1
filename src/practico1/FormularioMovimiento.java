/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package practico1;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import practico.dao.MovimientoDAO;
import practico.modelo.Movimiento;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class FormularioMovimiento extends javax.swing.JFrame {
    private MovimientoDAO daoMovimiento;
    
    
    /**
     * Creates new form FormularioMovimiento
     */
    public FormularioMovimiento() {
        daoMovimiento = new MovimientoDAO();
        initComponents();
        
        // Ocultamos los text Fields.
        this.sobreHabilitadoInput.setVisible(false);
        this.cuentaIdInput.setVisible(false);
        this.movimientoIdInput.setVisible(false);
    }
    
    public  void  listarMovimientosPorIdCuentaEnTabla(int idCuenta) {
         DefaultTableModel modelo = (DefaultTableModel)  tablaMovimiento.getModel(); 
        modelo.setRowCount(0);
        
        List<Movimiento> movimientos = new ArrayList<Movimiento>();
        movimientos = daoMovimiento.listarMovimientosPorIdCuenta(idCuenta);
        
        for (int i = 0; i < movimientos.size(); i = i+1)
        {   
            Movimiento mov= new Movimiento();
            mov=movimientos.get(i);
            
            modelo.addRow( new Object[]{
                    mov.getId_movimiento(), mov.getMonto(),
                    mov.getTipo(), mov.getFechaMovimiento()});
       }
     }

        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMovimiento = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        montoInput = new javax.swing.JTextField();
        tiposCombo = new javax.swing.JComboBox();
        agregar = new javax.swing.JButton();
        sobreHabilitadoInput = new javax.swing.JTextField();
        movimientoIdInput = new javax.swing.JTextField();
        cuentaIdInput = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tablaMovimiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código movimiento", "Monto", "Tipo", "Fecha"
            }
        ));
        jScrollPane1.setViewportView(tablaMovimiento);

        jLabel1.setText("Monto");

        jLabel2.setText("Tipo");

        tiposCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Debe", "Haber" }));
        tiposCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tiposComboActionPerformed(evt);
            }
        });

        agregar.setText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        sobreHabilitadoInput.setEditable(false);

        movimientoIdInput.setEditable(false);

        cuentaIdInput.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(montoInput, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(27, 27, 27))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cuentaIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tiposCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(agregar))
                            .addComponent(sobreHabilitadoInput, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(movimientoIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(238, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(sobreHabilitadoInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(cuentaIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addComponent(movimientoIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(montoInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tiposCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(agregar))
                .addGap(57, 57, 57)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        // TODO add your handling code here:
         Movimiento oMovi = new Movimiento();
      
         // Obtenemos el id de la cuenta que está en el Input.
        int cuentaId = Integer.valueOf(cuentaIdInput.getText());
         
        if(!movimientoIdInput.getText().isEmpty()) { // Si No está vacio.
            
            oMovi.setId_movimiento(Integer.valueOf(movimientoIdInput.getText()));
       }
        
        // Obtenemos el monto y el tipo para agregar los datos.
        int monto = Integer.valueOf(montoInput.getText());
        String tipo = tiposCombo.getSelectedItem().toString();
        
        
        
        // Cargamos los datos del formulario al modelo.
        oMovi.setId_cuenta(cuentaId);
        oMovi.setTipo(tipo);
        oMovi.setMonto(monto);
        
        // Obtenemos el monto permitido de la cuenta desde sobreHabilitadoInput.
        int sobreHabilitado = Integer.valueOf(sobreHabilitadoInput.getText());
        
        if(tipo == "Debe") {
            if(monto > sobreHabilitado) {
                JOptionPane.showMessageDialog(null, "Monto No permitido.");
            } else {
                daoMovimiento.verificarMovimiento(oMovi);
        
                listarMovimientosPorIdCuentaEnTabla(cuentaId);
            }
        }
        
        // LIMPIANDO EL FORMULARIO.
       
        movimientoIdInput.setText("");
        montoInput.setText("");
        tiposCombo.setSelectedItem("Debe");
        
        
        
    }//GEN-LAST:event_agregarActionPerformed

    private void tiposComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tiposComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tiposComboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioMovimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioMovimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioMovimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioMovimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioMovimiento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    public javax.swing.JTextField cuentaIdInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField montoInput;
    private javax.swing.JTextField movimientoIdInput;
    public javax.swing.JTextField sobreHabilitadoInput;
    public javax.swing.JTable tablaMovimiento;
    private javax.swing.JComboBox tiposCombo;
    // End of variables declaration//GEN-END:variables
}
